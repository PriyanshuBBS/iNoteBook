{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\React\\\\inotebook\\\\src\\\\context\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport noteContext from \"./noteContext\";\nimport { useState } from \"react\";\n\n//  This file contains the state and methods for context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:5000\";\n  const notesInitial = [];\n  const [notes, setNotes] = useState(notesInitial);\n\n  // Get Notes\n  const getNotes = async () => {\n    //copied- fetch with headers in express\n    const response = await fetch(`${host}/api/notes/fetch`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRlNzcyOTM5ZGY0OGFkOGU3MTY0MThkIn0sImlhdCI6MTY5Mjk0NTI1OX0.WT_U5CtOssK70ixkO4_3pNigKNaXD4oGmFU1CNYoz5c\"\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    setNotes(json);\n  };\n\n  // Add a Note\n  const addNote = async (title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRlNzcyOTM5ZGY0OGFkOGU3MTY0MThkIn0sImlhdCI6MTY5Mjk0NTI1OX0.WT_U5CtOssK70ixkO4_3pNigKNaXD4oGmFU1CNYoz5c\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n\n    // Schema of new note\n    const note = {\n      \"_id\": \"61322f119553781a8ca8d0e08\",\n      \"user\": \"6131dc5e3e4037cd4734a0664\",\n      \"title\": title,\n      \"description\": description,\n      \"tag\": tag,\n      \"date\": \"2021-09-03T14:20:09.668Z\",\n      \"__v\": 0\n    };\n    setNotes(notes.concat(note));\n  };\n\n  // Delete a Node\n  const deleteNote = async id => {\n    const response = await fetch(`${host}/api/notes/delete/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRlNzcyOTM5ZGY0OGFkOGU3MTY0MThkIn0sImlhdCI6MTY5Mjk0NTI1OX0.WT_U5CtOssK70ixkO4_3pNigKNaXD4oGmFU1CNYoz5c\"\n      }\n    });\n    const json = response.json();\n    console.log(json);\n    console.log(\"Deleting the note with id\" + id);\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n\n  // Edit a Node\n  const editNote = async (id, title, description, tag) => {\n    // API Call\n    const response = await fetch(`${host}/api/notes/update/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRlNzcyOTM5ZGY0OGFkOGU3MTY0MThkIn0sImlhdCI6MTY5Mjk0NTI1OX0.WT_U5CtOssK70ixkO4_3pNigKNaXD4oGmFU1CNYoz5c\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = await response.json();\n\n    // Logic to edit in client\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(noteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote,\n      editNote,\n      getNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["noteContext","useState","jsxDEV","_jsxDEV","NoteState","props","_s","host","notesInitial","notes","setNotes","getNotes","response","fetch","method","headers","json","console","log","addNote","title","description","tag","body","JSON","stringify","note","concat","deleteNote","id","newNotes","filter","_id","editNote","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Programming/React/inotebook/src/context/notes/NoteState.js"],"sourcesContent":["import noteContext from \"./noteContext\";\r\nimport { useState } from \"react\";\r\n\r\n\r\n//  This file contains the state and methods for context\r\nconst NoteState = (props) => {\r\n\r\n  const host = \"http://localhost:5000\"\r\n  const notesInitial = []\r\n  const [notes, setNotes] = useState(notesInitial)\r\n\r\n  // Get Notes\r\n  const getNotes = async () => {\r\n\r\n    //copied- fetch with headers in express\r\n    const response = await fetch(`${host}/api/notes/fetch`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRlNzcyOTM5ZGY0OGFkOGU3MTY0MThkIn0sImlhdCI6MTY5Mjk0NTI1OX0.WT_U5CtOssK70ixkO4_3pNigKNaXD4oGmFU1CNYoz5c\"\r\n      }\r\n    });\r\n\r\n    const json = await response.json()\r\n    console.log(json)\r\n    setNotes(json)\r\n  }\r\n\r\n\r\n  // Add a Note\r\n  const addNote = async (title, description, tag) => {\r\n\r\n    const response = await fetch(`${host}/api/notes/addnote`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRlNzcyOTM5ZGY0OGFkOGU3MTY0MThkIn0sImlhdCI6MTY5Mjk0NTI1OX0.WT_U5CtOssK70ixkO4_3pNigKNaXD4oGmFU1CNYoz5c\"\r\n      },\r\n      body: JSON.stringify({ title, description, tag })\r\n    });\r\n\r\n    const json = await response.json();\r\n    console.log(json)\r\n\r\n    // Schema of new note\r\n    const note = {\r\n      \"_id\": \"61322f119553781a8ca8d0e08\",\r\n      \"user\": \"6131dc5e3e4037cd4734a0664\",\r\n      \"title\": title,\r\n      \"description\": description,\r\n      \"tag\": tag,\r\n      \"date\": \"2021-09-03T14:20:09.668Z\",\r\n      \"__v\": 0\r\n    };\r\n    setNotes(notes.concat(note))\r\n\r\n  }\r\n\r\n  // Delete a Node\r\n  const deleteNote = async (id) => {\r\n    const response = await fetch(`${host}/api/notes/delete/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRlNzcyOTM5ZGY0OGFkOGU3MTY0MThkIn0sImlhdCI6MTY5Mjk0NTI1OX0.WT_U5CtOssK70ixkO4_3pNigKNaXD4oGmFU1CNYoz5c\"\r\n      }\r\n    });\r\n    const json = response.json();\r\n    console.log(json)\r\n\r\n    console.log(\"Deleting the note with id\" + id);\r\n    const newNotes = notes.filter((note) => { return note._id !== id })\r\n    setNotes(newNotes)\r\n  }\r\n\r\n  // Edit a Node\r\n  const editNote = async (id, title, description, tag) => {\r\n    // API Call\r\n    const response = await fetch(`${host}/api/notes/update/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRlNzcyOTM5ZGY0OGFkOGU3MTY0MThkIn0sImlhdCI6MTY5Mjk0NTI1OX0.WT_U5CtOssK70ixkO4_3pNigKNaXD4oGmFU1CNYoz5c\"\r\n      },\r\n      body: JSON.stringify({ title, description, tag })\r\n    });\r\n    const json = await response.json();\r\n\r\n    // Logic to edit in client\r\n    for (let index = 0; index < notes.length; index++) {\r\n      const element = notes[index];\r\n\r\n      if (element._id === id) {\r\n        element.title = title;\r\n        element.description = description;\r\n        element.tag = tag;\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n\r\n    <noteContext.Provider value={{ notes, addNote, deleteNote, editNote, getNotes }}>\r\n      {props.children}\r\n    </noteContext.Provider>\r\n  )\r\n}\r\n\r\nexport default NoteState;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}